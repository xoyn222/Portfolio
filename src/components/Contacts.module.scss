@import '../sass/variables.scss';
@import '../sass/mixin.scss';

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none; // Yeah, yeah everybody write about it
}

input[type='number'],
input[type="number"]:hover,
input[type="number"]:focus {
    appearance: none;
    -moz-appearance: textfield;
}

.container {
    @include flex(column, space-between, center);
    width: 80%;
    min-height: 90vh;
    @media screen and (max-width: 1800px) {
        margin-bottom: 12vh;
    }
    .titleContainer {
        @include flex(row, center, center);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 5px;
        width: 100%;
        height: 12%;
        position: relative;
        .dotContainer_left {
            width: 15%;
            position: absolute;
            display: flex;
            justify-content: center;
            top: 5vh;
            left: 10px;
            @media screen and (max-width: 700px) {
                display: none;
            }
            .leftDot {
                width: 10px;
                height: 10px;
                border-radius: 50%;
                background-color: $accentColor;
                box-shadow: 0 0 10px $accentColor, 0 0 30px $accentColor;
                animation: dotAnimation 2.5s linear infinite;
                @keyframes dotAnimation {
                    0% {
                        margin-right: 170px;
                        opacity: 1;
                    }
                    50% {
                        margin-right: 0;
                        opacity: 0;
                    }
                    100% {
                        margin-right: 170px;
                        opacity: 1;
                    }
                }
            }
        }
        .dotContainer_right {
            width: 15%;
            position: absolute;
            display: flex;
            justify-content: center;
            top: 5vh;
            right: 10px;
            @media screen and (max-width: 700px) {
                display: none;
            }
            .rightDot {
                width: 10px;
                height: 10px;
                border-radius: 50%;
                background-color: $accentColor;
                box-shadow: 0 0 10px $accentColor, 0 0 30px $accentColor;
                animation: dotAnimation2 2.5s linear infinite;
                @keyframes dotAnimation2 {
                    0% {
                        margin-left: 170px;
                        opacity: 1;
                    }
                    50% {
                        margin-left: 0;
                        opacity: 0;
                    }
                    100% {
                        margin-left: 170px;
                        opacity: 1;
                    }
                }
            }
        }
        .title {
            font-family: $textStyle;
            text-transform: uppercase;
            font-size: 72px;
            padding: 10px;
            border-radius: 4px;
            width: 100%;
            text-align: center;
            .me {
                color: $accentColor;
                font-family: inherit;
            }
            animation: titleAppear 1s forwards;
            @media screen and (min-width: 3000px) {
                font-size: 80px;
            }
            @media screen and (max-width: 2500px) {
                font-size: 72px;
            }
            @media screen and (max-width: 1000px) {
                font-size: 52px;
            }
            @media screen and (max-width: 500px) {
                font-size: 32px;
            }
            @keyframes titleAppear {
                from {
                    margin-top: 100%;
                    transform: rotate(30deg)
                }
                to {
                    transform: rotate(0deg)
                }
            }
        }
        .titleBack {
            position: absolute;
            font-family: $textStyle;
            font-size: 110px;
            z-index: 0;
            opacity: 1;
            color: hsla(0, 0%, 100%, .07);
            font-weight: 900;
            text-transform: uppercase;
        }
    }
    .form {
        @include flex(column, space-evenly, center);
        width: 100%;
        min-height: 80vh;
        border-radius: 4px;
        flex-wrap: wrap;
        .errorContainer {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .errorActive {
            color: red;
            font-size: 24px;
            opacity: 1;
            position: absolute;
            animation: errorAppear 3s ease-in-out forwards;
            @keyframes errorAppear {
                0% {
                    opacity: 0;
                }
                50% {
                    opacity: 1;
                }
                100% {
                    opacity: 0;
                }
            }
        }
        .errorDisabled {
            font-size: 24px;
            opacity: 0;
        }
        .inputBox {
            position: relative;
            width: 80%;
        }
        .input {
            width: 100%;
            padding: 10px;
            border: 1px solid rgba(255, 255, 255, 0.25);
            background: #111111;
            border-radius: 5px;
            outline: none;
            color: white;
            font-size: 24px;
            transition: 0.5s;
        }
        .inputLight {
            background: rgba(190, 190, 190, 0.8);
        }
        .inputBox span {
            position: absolute;
            left: 0;
            padding: 10px;
            pointer-events: none;
            font-size: 24px;
            color: white;
            transition: 0.5s;
            @media screen and (max-width: 500px) {
                font-size: 18px;
            }
        }
        .inputBox input:valid ~ span,
        .inputBox input:focus ~ span {
            color: white;
            transform: translate(10px) translateY(-11px);
            font-size: 16px;
            padding: 0 10px;
            background: $accentColor;
            letter-spacing: 2px;
            border-radius: 3px;
        }
        .inputBox input:valid,
        .inputBox input:focus {
            border: 1px solid $accentColor;
        }
        .textareaContact {
            width: 100%;
            padding: 10px;
            border: 1px solid rgba(255, 255, 255, 0.25);
            background: #111111;
            border-radius: 5px;
            outline: none;
            color: white;
            font-size: 24px;
            transition: 0.5s;
        }
        .textAreaLight {
            background: rgba(190, 190, 190, 0.8);
            border: none;
            box-shadow: none;
        }
        .inputBox textarea:valid ~ span,
        .inputBox textarea:focus ~ span {
            color: white;
            transform: translate(10px) translateY(-11px);
            font-size: 16px;
            padding: 0 10px;
            background: $accentColor;
            letter-spacing: 2px;
            border-radius: 3px;
        }
        .inputBox textarea:valid,
        .inputBox textarea:focus {
            border: 1px solid $accentColor;
        }
        .inputContact {
            width: 80%;
            border: none;
            outline: none;
            padding: 20px;
            background-color: rgba(50, 50, 50, 0.7);
            box-shadow: 0 1px 10px 0 rgba(0, 0, 0, 0.3);
            color: white;
            appearance: none;
        }
        textarea {
            min-height: 30vh;
            width: 80%;
            resize: none;
            outline: none;
            padding: 20px;
            border-radius: 4px;
            border: none;
            box-shadow: 0 1px 10px 0 rgba(0, 0, 0, 0.3);
            background-color: rgba(50, 50, 50, 0.7);
            color: white;
        }
        a {
            position: relative;
            padding: 20px 50px;
            display: block;
            text-decoration: none;
            width: 200px;
            overflow: hidden;
            text-align: center;
            border-radius: 3px;
            box-shadow: 0 1px 10px 0 rgba(0, 0, 0, 0.3);
            transition: transform 0.2s ease-in-out;
            @media screen and (max-width: 500px) {
                width: 170px;
            }
            @media screen and (max-width: 300px) {
                width: 150px;
            }
        }
        a span {
            position: relative;
            z-index: 1;
            color: white;
            font-size: 24px;
            letter-spacing: 1px;
        }
        a .liquid {
            position: absolute;
            left: 0;
            top: -80px;
            width: 200px;
            height: 200px;
            background: #3a5ace;
            box-shadow: 0 0 50px rgba(0,0,0,.5);
            transition: 0.5s;
        }
        a:hover .liquid {
            top: -120px;
        }

        a .liquid:before,
        a .liquid:after {
            content: '';
            position: absolute;
            width: 200%;
            height: 200%;
            top: 0;
            left: 50%;
            transform: translate(-50%, -75%);
        }
        .liquid:before {
            border-radius: 45%;
            background: rgba(20,20,20,1);
            animation: animate 5s linear infinite;
        }
        .liquid:after {
            border-radius: 40%;
            background: rgba(20,20,20,0.5);
            animation: animate 10s linear infinite;
        }

        a .liquidLight {
            position: absolute;
            left: 0;
            top: -80px;
            width: 200px;
            height: 200px;
            background: #3a5ace;
            box-shadow: 0 0 50px rgba(0,0,0,.5);
            transition: 0.5s;
        }
        a:hover .liquidLight {
            top: -120px;
        }

        a .liquidLight:before,
        a .liquidLight:after {
            content: '';
            position: absolute;
            width: 200%;
            height: 200%;
            top: 0;
            left: 50%;
            transform: translate(-50%, -75%);
        }
        .liquidLight:before {
            border-radius: 45%;
            background: rgba(200, 200, 200, 1);
            animation: animate 5s linear infinite;
        }
        .liquidLight:after {
            border-radius: 40%;
            background: rgba(200, 200, 200, 0.5);
            animation: animate 10s linear infinite;
        }
        @keyframes animate {
            0% {
                transform: translate(-50%, -75%) rotate(0deg);
            }
            100% {
                transform: translate(-50%, -75%) rotate(360deg);
            }
        }
        a:active {
            transform: scale(0.94);
        }

    }
}


